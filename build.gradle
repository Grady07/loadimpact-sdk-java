import javax.tools.JavaCompiler

//apply plugin: 'java'
//apply plugin: 'maven-publish'

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '1.2.1'
}

group = 'com.loadimpact'
version = '1.4'

ext {
    jerseyVersion = '2.17'
    jodaVersion = '2.7'
    junitVersion = '4.12'
    hamcrestVersion = '1.3'
    mockitoVersion = '1.10.19'
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

sourceSets {
    integrationTest {
        java.srcDir file('src/integrationTests/java')
        resources.srcDir file('src/integrationTests/resources')
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + compileClasspath
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.glassfish.jersey.core:jersey-client:${jerseyVersion}"
    compile "org.glassfish.jersey.media:jersey-media-multipart:${jerseyVersion}"
    compile "org.glassfish.jersey.media:jersey-media-json-processing:${jerseyVersion}"
    compile "joda-time:joda-time:${jodaVersion}"

    testCompile "junit:junit:${junitVersion}"
    testCompile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
}

tasks.withType(JavaCompiler) {
    options.compilerArgs = ['-Xlint:unchecked']
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath    = sourceSets.integrationTest.runtimeClasspath
    reports.html.destination = file("$reports.html.destination/integration-tests")
    reports.junitXml.destination = file("$reports.junitXml.destination/integration-tests")
}

check.dependsOn integrationTest


